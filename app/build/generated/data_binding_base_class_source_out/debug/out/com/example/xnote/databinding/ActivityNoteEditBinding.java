// Generated by view binder compiler. Do not edit!
package com.example.xnote.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.xnote.R;
import com.example.xnote.ui.RichEditText;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNoteEditBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout bottomToolbar;

  @NonNull
  public final ImageButton btnAddAudio;

  @NonNull
  public final ImageButton btnAddImage;

  @NonNull
  public final ImageButton btnCancelRecording;

  @NonNull
  public final ImageButton btnSave;

  @NonNull
  public final ImageButton btnStopRecording;

  @NonNull
  public final EditText editTitle;

  @NonNull
  public final LinearLayout recordingPanel;

  @NonNull
  public final RichEditText richEditText;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final TextView tvRecordingTime;

  @NonNull
  public final TextView tvStatus;

  private ActivityNoteEditBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout bottomToolbar, @NonNull ImageButton btnAddAudio,
      @NonNull ImageButton btnAddImage, @NonNull ImageButton btnCancelRecording,
      @NonNull ImageButton btnSave, @NonNull ImageButton btnStopRecording,
      @NonNull EditText editTitle, @NonNull LinearLayout recordingPanel,
      @NonNull RichEditText richEditText, @NonNull ScrollView scrollView,
      @NonNull MaterialToolbar toolbar, @NonNull TextView tvRecordingTime,
      @NonNull TextView tvStatus) {
    this.rootView = rootView;
    this.bottomToolbar = bottomToolbar;
    this.btnAddAudio = btnAddAudio;
    this.btnAddImage = btnAddImage;
    this.btnCancelRecording = btnCancelRecording;
    this.btnSave = btnSave;
    this.btnStopRecording = btnStopRecording;
    this.editTitle = editTitle;
    this.recordingPanel = recordingPanel;
    this.richEditText = richEditText;
    this.scrollView = scrollView;
    this.toolbar = toolbar;
    this.tvRecordingTime = tvRecordingTime;
    this.tvStatus = tvStatus;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNoteEditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNoteEditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_note_edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNoteEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomToolbar;
      LinearLayout bottomToolbar = ViewBindings.findChildViewById(rootView, id);
      if (bottomToolbar == null) {
        break missingId;
      }

      id = R.id.btnAddAudio;
      ImageButton btnAddAudio = ViewBindings.findChildViewById(rootView, id);
      if (btnAddAudio == null) {
        break missingId;
      }

      id = R.id.btnAddImage;
      ImageButton btnAddImage = ViewBindings.findChildViewById(rootView, id);
      if (btnAddImage == null) {
        break missingId;
      }

      id = R.id.btnCancelRecording;
      ImageButton btnCancelRecording = ViewBindings.findChildViewById(rootView, id);
      if (btnCancelRecording == null) {
        break missingId;
      }

      id = R.id.btnSave;
      ImageButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.btnStopRecording;
      ImageButton btnStopRecording = ViewBindings.findChildViewById(rootView, id);
      if (btnStopRecording == null) {
        break missingId;
      }

      id = R.id.editTitle;
      EditText editTitle = ViewBindings.findChildViewById(rootView, id);
      if (editTitle == null) {
        break missingId;
      }

      id = R.id.recordingPanel;
      LinearLayout recordingPanel = ViewBindings.findChildViewById(rootView, id);
      if (recordingPanel == null) {
        break missingId;
      }

      id = R.id.richEditText;
      RichEditText richEditText = ViewBindings.findChildViewById(rootView, id);
      if (richEditText == null) {
        break missingId;
      }

      id = R.id.scrollView;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvRecordingTime;
      TextView tvRecordingTime = ViewBindings.findChildViewById(rootView, id);
      if (tvRecordingTime == null) {
        break missingId;
      }

      id = R.id.tvStatus;
      TextView tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      return new ActivityNoteEditBinding((ConstraintLayout) rootView, bottomToolbar, btnAddAudio,
          btnAddImage, btnCancelRecording, btnSave, btnStopRecording, editTitle, recordingPanel,
          richEditText, scrollView, toolbar, tvRecordingTime, tvStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
